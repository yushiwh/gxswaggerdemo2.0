#微服务唯一标识，总是放在第一行
spring.application.name=gxswaggergithub

server.port=9090



spring.datasource.test1.driverClassName = com.mysql.jdbc.Driver
spring.datasource.test1.url =jdbc:mysql://10.3.32.85:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.test1.username = root
spring.datasource.test1.password = roottest


spring.aop.proxy-target-class=true

spring.mvc.date-format=yyyy-MM-dd HH:mm:ss

#dubbo配置
dubbo.application.name=${spring.application.name}
dubbo.registry.protocol=zookeeper
#dubbo.registry.address=10.3.5.36:2181,10.3.5.38:2181,10.3.5.42:2181
dubbo.registry.address=10.3.5.36:2181
dubbo.annotation.package=com.jztey.${spring.application.name}
dubbo.provider.timeout=15000
dubbo.consumer.check=false
dubbo.consumer.timeout=15000
 
  


## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=4
## Redis服务器地址
spring.redis.host=10.3.5.38
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=10000



#日志
logging.file=${spring.application.name}.log


#打印真实的sql
spring.jpa.show-sql=true

#控制台输出的json更加美观
spring.jackson.serialization.indent_output=true



 

#配置ActiveMQ的消息代理的地址
#开发环境
spring.activemq.broker-url=tcp://10.3.5.45:61616
 
spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false //如果此处设置为true，需要加依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败
spring.activemq.user=admin
spring.activemq.password=admin
##白名单
spring.activemq.packages.trust-all=true
##连接超时超时毫秒。
spring.activemq.pool.expiry-timeout=0
##连接空闲超时（毫秒）。
spring.activemq.pool.idle-timeout=30000
##汇集连接的最大数目。
spring.activemq.pool.max-connections=1 
 